# generated by datamodel-codegen:
#   filename:  shab-publication.schema.json
#   timestamp: 2025-09-08T08:48:16+00:00

from __future__ import annotations

from datetime import date, datetime
from enum import Enum
from typing import Any, Dict, Optional
from uuid import UUID

from pydantic import BaseModel, Extra, Field


class ProcessingStatus(Enum):
    pending = 'pending'
    processed = 'processed'
    failed = 'failed'
    skipped = 'skipped'


class ShabPublication(BaseModel):
    class Config:
        extra = Extra.forbid

    id: UUID = Field(
        ..., description='Unique identifier for the SHAB publication record'
    )
    metaId: str = Field(..., description='SHAB meta ID for tracking')
    publicationNr: str = Field(..., description='SHAB publication number')
    subsectionId: str = Field(..., description='SHAB subsection identifier')
    publicationDate: date = Field(
        ..., description='Date when the publication was issued'
    )
    xmlContent: str = Field(
        ..., description='Complete XML content for audit trail and reprocessing'
    )
    processedAt: Optional[datetime] = Field(
        None, description='Timestamp when the publication was processed'
    )
    processingStatus: Optional[ProcessingStatus] = Field(
        None, description='Status of the processing pipeline'
    )
    extractionResults: Optional[Dict[str, Any]] = Field(
        None, description='Results from LLM extraction process'
    )
    createdAt: Optional[datetime] = Field(
        None, description='Timestamp when the record was created'
    )
    updatedAt: Optional[datetime] = Field(
        None, description='Timestamp when the record was last updated'
    )
