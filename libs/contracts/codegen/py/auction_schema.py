# generated by datamodel-codegen:
#   filename:  auction.schema.json
#   timestamp: 2025-09-08T08:48:16+00:00

from __future__ import annotations

from datetime import date, datetime, time
from enum import Enum
from typing import Optional
from uuid import UUID

from pydantic import BaseModel, Extra, Field


class Status(Enum):
    active = 'active'
    cancelled = 'cancelled'
    completed = 'completed'


class Auction(BaseModel):
    class Config:
        extra = Extra.forbid

    id: UUID = Field(..., description='Unique identifier for the auction')
    status: Status = Field(..., description='Current status of the auction')
    auctionDate: date = Field(..., description='Date when the auction takes place')
    auctionTime: Optional[time] = Field(
        None, description='Time when the auction starts'
    )
    auctionLocation: Optional[str] = Field(
        None, description='Location where the auction takes place'
    )
    registrationDeadline: Optional[datetime] = Field(
        None, description='Deadline for auction registration'
    )
    circulationDeadline: Optional[datetime] = Field(
        None, description='Deadline for circulation'
    )
    responsibleOffice: Optional[str] = Field(
        None, description='Office responsible for the auction'
    )
    additionalLegalRemedy: Optional[str] = Field(
        None, description='Additional legal remedy information'
    )
    createdAt: Optional[datetime] = Field(
        None, description='Timestamp when the record was created'
    )
    updatedAt: Optional[datetime] = Field(
        None, description='Timestamp when the record was last updated'
    )
